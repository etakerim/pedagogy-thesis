
---------------------------------------------------------------------------------------------------------
procedurálny charakter

Štátny vzdelávací program je záväzný dokument, ktorý stanovuje všeobecné ciele vzdelávania a kľúčové kompetencie, ku ktorým má vzdelávanie smerovať. Ciele vzdelávania sú postavené tak, aby sa zabezpečil vyvážený rozvoj osobnosti žiakov. Štátny vzdelávací program vymedzuje aj rámcový obsah vzdelávania. Je východiskom pre tvorbu školského vzdelávacieho programu, v ktorom sa zohľadňujú aj špecifické podmienky a potreby regiónu.

Algoritmické riešenie problémov – analýza problému

Vlastnosti a vzťahy: platí – neplatí, a/alebo/nie (neformálne)
Procesy: krokovanie sekvencie a opakovania, rozhodovanie o pravdivosti tvrdenia

Žiak vie/dokáže
 uvažovať o obmedzeniach, ktoré súvisia s riešením úlohy,
 identifikovať opakujúce sa vzory,
 uvažovať o hraničných prípadoch (na úrovni cyklov),
 rozhodovať o pravdivosti/nepravdivosti tvrdenia (výroku)
 vyberať prvky alebo možnosti podľa pravdivosti tvrdenia,
 popisovať vzťahy medzi informáciami vlastnými slovami,
 uvádzať kontra príklad, v ktorom niečo neplatí, nefunguje,
 uvažovať o rôznych riešeniach.



Algoritmické riešenie problémov – jazyk na zápis riešenia

Vlastnosti a vzťahy: chybný zápis, konštrukcie jazyka ako postupnosti príkazov
Procesy: zostavovanie programu v jazyku na zápis algoritmov, spustenie programu

Žiak vie/dokáže
 používať jazyk na popis riešenia problému – aplikovať pravidlá, konštrukcie jazyka.




Algoritmické riešenie problémov – pomocou postupnosti príkazov
Pojmy: príkaz, parameter príkazu, postupnosť príkazov
Vlastnosti a vzťahy: ako súvisia príkazy, poradie príkazov a výsledok, pravidlá jazyka pre zostavenie sekvencie príkazov
Procesy: zostavenie a upravenie príkazu/príkazov, vyhodnotenie postupnosti príkazov, úprava sekvencie príkazov (pridanie, odstránenie príkazu, zmena poradia príkazov)

Žiak vie/dokáže
 riešiť problém skladaním príkazov do postupnosti,
 aplikovať pravidlá konštrukcie jazyka pre zostavenie postupnosti príkazov,
 interpretovať postupnosť príkazov,
 hľadať chybu v postupnosti príkazov a opraviť ju.




Algoritmické riešenie problémov – pomocou cyklov

Pojmy: opakovanie, počet opakovaní, telo cyklu
Vlastnosti a vzťahy: ako súvisí počet opakovaní s výsledkom
Procesy: zostavovanie, upravovanie tela cyklu, nastavenie počtu opakovaní

Žiak vie/dokáže
 rozpoznať opakujúce sa vzory pri riešení zadaného problému,
 rozpoznať, aká časť algoritmu sa má vykonať pred, počas a po skončení cyklu,
 stanovovať počet opakovaní pomocou hodnoty,
 riešiť problémy, ktoré vyžadujú známy počet opakovaní,
 zapisovať riešenie problému s cyklom pomocou jazyka,
 interpretovať algoritmy s cyklami.



Algoritmické riešenie problémov – interpretácia zápisu riešenia

Vlastnosti a vzťahy: jazyk – vykonanie programu
Procesy: krokovanie, čo sa deje v počítači v prípade chyby v programe

Žiak vie/dokáže
 realizovať návod, postup, algoritmus riešenia úlohy – interpretovať ho, krokovať riešenie, simulovať činnosť vykonávateľa.



Algoritmické riešenie problémov – hľadanie, opravovanie chýb

Vlastnosti a vzťahy: chyba v postupnosti príkazov (zlý príkaz, chýbajúci príkaz, vymenený príkaz alebo príkaz navyše), riešenie, ktoré lepšie spĺňa stanovené kritérium v zadanom probléme
Procesy: hľadanie chyby

Žiak vie/dokáže
 rozpoznať, že program pracuje nesprávne,
 hľadať chybu vo vlastnom nesprávne pracujúcom programe a opraviť ju,
 interpretovať návod, v ktorom je chyba,
 diskutovať a argumentovať o správnosti riešenia (svojho aj cudzieho),
 diskutovať o rôznych postupoch a výstupoch riešenia (porovnávať riešenia konkrétneho problému od rôznych žiakov z hľadiska dĺžky výsledku, trvania, veľkosti kódu/zápisu),
 dopĺňať, dokončovať, modifikovať rozpracované riešenie,
 navrhovať vylepšenie riešenia.



POSTUPY, RIEŠENIE PROBLÉMOV, ALGORITMICKÉ MYSLENIE

problém, algoritmus, algoritmy z bežného života, spôsoby zápisu algoritmov,  etapy riešenia problému, rozbor problému, algoritmus, program, ladenie,  programovací jazyk, syntax, spustenie programu, logické chyby, chyby počas behu programu,  pojmy, príkazy (priradenie, vstup, výstup), riadiace štruktúry (podmienené príkazy, cykly), premenné, typy, množina operácií.

zanalyzujú problém, navrhnú algoritmus riešenia problému, zapíšu algoritmus v zrozumiteľnej formálnej podobe, overia správnosť algoritmu,  budú riešiť problémy pomocou algoritmov, budú vedieť ich zapísať do programovacieho jazyka, vyhľadajú a opravia chyby,  porozumejú hotovým programom, určia vlastnosti vstupov, výstupov a vzťahy medzi nimi, budú vedieť ich testovať a modifikovať,  budú riešiť úlohy pomocou príkazov s rôznymi obmedzeniami použitia príkazov, premenných, typov a operácií,  použijú základné typy používaného programovacieho jazyka,  rozpoznajú a odstránia syntaktické chyby, opravia chyby

vzniknuté počas behu programu, identifikujú miesta programu, na ktorých môže dôjsť k chybám počas behu programu.


----
CP
typy údajov – ich použitie a obmedzenia,  pravidlá vyhodnocovania výrazov – priorita operácií, výrazy so štandardnými funkciami,  premenná – názov, hodnota, vzťah s pamäťou,  jednorozmerné polia – prvky, indexy, usporiadané hodnoty,  textový súbor – ako postupnosť znakov a riadkov, koniec súboru,  zložený a jednoduchý typ údajov.

syntax jazyka – rezervované slová, identifikátory, konštanty, oddeľovače,  prostriedky jazyka pre interakciu – získanie vstupu, zrealizovanie výstupu,  cyklus s pevným počtom opakovaní, cyklus s podmienkou – počítadlo cyklu, telo cyklu, vnorené príkazy,  vetvenie – podmienený príkaz, podmienka, telo vetvy, vnorené príkazy,  podprogram – definovanie, hodnotové parametre, nerekurzívne volanie, návratová hodnota, lokálne premenné.


chyby: syntaktické, logické, chyby vzniknuté za behu,  analýza problému – vzťahy medzi vstupom a výstupom,  vstupné obmedzenia – pre ktoré hodnoty algoritmus správne pracuje
